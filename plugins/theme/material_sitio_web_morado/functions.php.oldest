<?php
add_theme_support( 'menus' );
if ( function_exists( 'add_theme_support' ) ) add_theme_support( 'post-thumbnails' );

function cpt_gral() {

$ctp_prensa_labels = array(
                        'name'                => _x( 'Prensas', 'Post Type General Name', 'text_domain' ),
                        'singular_name'       => _x( 'Prensa', 'Post Type Singular Name', 'text_domain' ),
                        'menu_name'           => __( 'Prensa', 'text_domain' ),
                        'name_admin_bar'      => __( 'Prensa', 'text_domain' ),
                        'parent_item_colon'   => __( 'Artículo Superior:', 'text_domain' ),
                        'all_items'           => __( 'PRENSA', 'text_domain' ),
                        'add_new_item'        => __( 'Añadir nueva Prensa', 'text_domain' ),
                        'add_new'             => __( 'Añadir nueva Prensa', 'text_domain' ),
                        'new_item'            => __( 'Nueva Entrada', 'text_domain' ),
                        'edit_item'           => __( 'Editar Entrada', 'text_domain' ),
                        'update_item'         => __( 'Actualizar',  'text_domain' ),
                        'view_item'           => __( 'Visualizar', 'text_domain' ),
                        'search_items'        => __( 'Buscar', 'text_domain' ),
                        'not_found'           => __( 'No se encontro', 'text_domain' ),
                        'not_found_in_trash'  => __( 'No se encontro en la papelera', 'text_domain' ),
                    );
    $ctp_prensa_args = array(
        'label'               => __( 'Prensa', 'text_domain' ),
        'description'         => __( 'Post Type Prensa', 'text_domain' ),
        'labels'              => $ctp_prensa_labels,
        'supports'            => array( 'title', 'editor', 'excerpt', 'author', 'thumbnail', 'comments', 'revisions', 'custom-fields', ),
        'hierarchical'        => false,
        'public'              => true,
        'show_ui'             => true,
        'show_in_menu'        => true,
        'menu_position'       => 4,
        'menu_icon'           => 'dashicons-format-aside',
        'show_in_admin_bar'   => true,
        'show_in_nav_menus'   => true,
        'can_export'          => true,
        'has_archive'         => true,      
        'exclude_from_search' => false,
        'publicly_queryable'  => true,
        'rewrite'             =>  array('slug'    =>  'prensa'),
        'capability_type'     => 'post',
    );
    register_post_type( 'prensa', $ctp_prensa_args );



                $ctp_expositores_labels = array(
                    'name'                => _x( 'Expositores', 'Post Type General Name', 'text_domain' ),
                    'singular_name'       => _x( 'Expositores', 'Post Type Singular Name', 'text_domain' ),
                    'menu_name'           => __( 'Expositores', 'text_domain' ),
                    'name_admin_bar'      => __( 'Expositores', 'text_domain' ),
                    'parent_item_colon'   => __( 'Artículo Superior', 'text_domain' ),
                    'all_items'           => __( 'Todos los Expositores', 'text_domain' ),
                    'add_new_item'        => __( 'Añadir nuevo Expositor', 'text_domain' ),
                    'add_new'             => __( 'Añadir nuevo Expositor', 'text_domain' ),
                    'new_item'            => __( 'Nueva Entrada', 'text_domain' ),
                    'edit_item'           => __( 'Editar Entrada', 'text_domain' ),
                    'update_item'         => __( 'Actualizar',  'text_domain' ),
                    'view_item'           => __( 'Visualizar', 'text_domain' ),
                    'search_items'        => __( 'Buscar', 'text_domain' ),
                    'not_found'           => __( 'No se encontro', 'text_domain' ),
                    'not_found_in_trash'  => __( 'No se encontro en la papelera', 'text_domain' ),
                );

    $ctp_expositores_args = array(
        'label'               => __( 'Expositor', 'text_domain' ),
        'description'         => __( 'Post Type Expositor', 'text_domain' ),
        'labels'              => $ctp_expositores_labels,
        'supports'            => array( 'title', 'editor', 'excerpt', 'author', 'thumbnail', 'comments', 'revisions', 'custom-fields', ),
        'hierarchical'        => false,
        'public'              => true,
        'show_ui'             => true,
        'show_in_menu'        => true,
        'menu_position'       => 5,
        'menu_icon'           => 'dashicons-id-alt',
        'show_in_admin_bar'   => true,
        'show_in_nav_menus'   => true,
        'can_export'          => true,
        'has_archive'         => true,      
        'exclude_from_search' => false,
        'publicly_queryable'  => true,
        'capability_type'     => 'post',
    );
    register_post_type( 'expositor', $ctp_expositores_args );



                $ctp_programa_labels = array(
                    'name'                => _x( 'Programa', 'Post Type General Name', 'text_domain' ),
                    'singular_name'       => _x( 'Programa', 'Post Type Singular Name', 'text_domain' ),
                    'menu_name'           => __( 'Programa', 'text_domain' ),
                    'name_admin_bar'      => __( 'Programa', 'text_domain' ),
                    'parent_item_colon'   => __( 'Artículo Superior:', 'text_domain' ),
                    'all_items'           => __( 'Todos los Programas', 'text_domain' ),
                    'add_new_item'        => __( 'Añadir nuevo Programa', 'text_domain' ),
                    'add_new'             => __( 'Añadir nuevo Programa', 'text_domain' ),
                    'new_item'            => __( 'Nueva Entrada', 'text_domain' ),
                    'edit_item'           => __( 'Editar Entrada', 'text_domain' ),
                    'update_item'         => __( 'Actualizar',  'text_domain' ),
                    'view_item'           => __( 'Visualizar', 'text_domain' ),
                    'search_items'        => __( 'Buscar', 'text_domain' ),
                    'not_found'           => __( 'No se encontro', 'text_domain' ),
                    'not_found_in_trash'  => __( 'No se encontro en la papelera', 'text_domain' ),
                );

    $ctp_programa_args = array(
        'label'               => __( 'Programa', 'text_domain' ),
        'description'         => __( 'Post Type Programa', 'text_domain' ),
        'labels'              => $ctp_programa_labels,
        'supports'            => array( 'title', 'editor', 'excerpt', 'author', 'thumbnail', 'comments', 'revisions', 'custom-fields', ),
        'hierarchical'        => false,
        'public'              => true,
        'show_ui'             => true,
        'show_in_menu'        => true,
        'menu_position'       => 6,
        'menu_icon'           => 'dashicons-list-view',
        'show_in_admin_bar'   => true,
        'show_in_nav_menus'   => true,
        'can_export'          => true,
        'has_archive'         => true,      
        'exclude_from_search' => false,
        'publicly_queryable'  => true,
        'capability_type'     => 'post',
    );
    register_post_type( 'programa', $ctp_programa_args );


$ctp_vip_program_labels = array(
                        'name'                => _x( 'Vip Program', 'Post Type General Name', 'text_domain' ),
                        'singular_name'       => _x( 'Vip Program', 'Post Type Singular Name', 'text_domain' ),
                        'menu_name'           => __( 'Vip Program', 'text_domain' ),
                        'name_admin_bar'      => __( 'Vip Program', 'text_domain' ),
                        'parent_item_colon'   => __( 'Artículo Superior:', 'text_domain' ),
                        'all_items'           => __( 'Todos los Vip Program', 'text_domain' ),
                        'add_new_item'        => __( 'Añadir nuevo Vip Program', 'text_domain' ),
                        'add_new'             => __( 'Añadir nuevo Vip Program', 'text_domain' ),
                        'new_item'            => __( 'Nueva Entrada', 'text_domain' ),
                        'edit_item'           => __( 'Editar Entrada', 'text_domain' ),
                        'update_item'         => __( 'Actualizar',  'text_domain' ),
                        'view_item'           => __( 'Visualizar', 'text_domain' ),
                        'search_items'        => __( 'Buscar', 'text_domain' ),
                        'not_found'           => __( 'No se encontro', 'text_domain' ),
                        'not_found_in_trash'  => __( 'No se encontro en la papelera', 'text_domain' ),
                    );
    $ctp_vip_program_args = array(
        'label'               => __( 'Vip Program', 'text_domain' ),
        'description'         => __( 'Post Type Vip Program', 'text_domain' ),
        'labels'              => $ctp_vip_program_labels,
        'supports'            => array( 'title', 'editor', 'excerpt', 'author', 'thumbnail', 'comments', 'revisions', 'custom-fields', ),
        'hierarchical'        => false,
        'public'              => true,
        'show_ui'             => true,
        'show_in_menu'        => true,
        'menu_position'       => 7,
        'menu_icon'           => 'dashicons-universal-access',
        'show_in_admin_bar'   => true,
        'show_in_nav_menus'   => true,
        'can_export'          => true,
        'has_archive'         => true,      
        'exclude_from_search' => false,
        'publicly_queryable'  => true,
        'capability_type'     => 'post',
    );
    register_post_type( 'vip', $ctp_vip_program_args );

$ctp_juez_labels = array(
                        'name'                => _x( 'Juez', 'Post Type General Name', 'text_domain' ),
                        'singular_name'       => _x( 'Juez', 'Post Type Singular Name', 'text_domain' ),
                        'menu_name'           => __( 'Juez', 'text_domain' ),
                        'name_admin_bar'      => __( 'Juez', 'text_domain' ),
                        'parent_item_colon'   => __( 'Artículo Superior:', 'text_domain' ),
                        'all_items'           => __( 'Juez', 'text_domain' ),
                        'add_new_item'        => __( 'Añadir nuevo Juez', 'text_domain' ),
                        'add_new'             => __( 'Añadir nuevo Juez', 'text_domain' ),
                        'new_item'            => __( 'Nueva Entrada', 'text_domain' ),
                        'edit_item'           => __( 'Editar Entrada', 'text_domain' ),
                        'update_item'         => __( 'Actualizar',  'text_domain' ),
                        'view_item'           => __( 'Visualizar', 'text_domain' ),
                        'search_items'        => __( 'Buscar', 'text_domain' ),
                        'not_found'           => __( 'No se encontro', 'text_domain' ),
                        'not_found_in_trash'  => __( 'No se encontro en la papelera', 'text_domain' ),
                    );
    $ctp_juez_args = array(
        'label'               => __( 'Juez', 'text_domain' ),
        'description'         => __( 'Post Type Juez', 'text_domain' ),
        'labels'              => $ctp_juez_labels,
        'supports'            => array( 'title', 'editor', 'excerpt', 'author', 'thumbnail', 'comments', 'revisions', 'custom-fields', ),
        'hierarchical'        => false,
        'public'              => true,
        'show_ui'             => true,
        'show_in_menu'        => true,
        'menu_position'       => 8,
        'menu_icon'           => 'dashicons-businessman',
        'show_in_admin_bar'   => true,
        'show_in_nav_menus'   => true,
        'can_export'          => true,
        'has_archive'         => true,      
        'exclude_from_search' => false,
        'publicly_queryable'  => true,
        'rewrite'             =>  array('slug'    =>  'juez'),
        'capability_type'     => 'post',
    );
    register_post_type( 'juez', $ctp_juez_args );

}
add_action( 'init', 'cpt_gral');

function taxs_gral(){
                $taxs_prensa_labels = array(
                'name'                       => _x( 'Categorías de Prensa', 'Taxonomy General Name', 'text_domain' ),
                'singular_name'              => _x( 'Categorías de Prensa', 'Taxonomy Singular Name', 'text_domain' ),
                'menu_name'                  => __( 'Categorías de Prensa', 'text_domain' ),
                'all_items'                  => __( 'Todas las categorías', 'text_domain' ),
                'parent_item'                => __( 'Categoría Superior', 'text_domain' ),
                'parent_item_colon'          => __( 'Categoría Superior:', 'text_domain' ),
                'new_item_name'              => __( 'Nueva Categoría', 'text_domain' ),
                'add_new_item'               => __( 'Añadir Nueva', 'text_domain' ),
                'edit_item'                  => __( 'Editar', 'text_domain' ),
                'update_item'                => __( 'Actualizar', 'text_domain' ),
                'view_item'                  => __( 'Visializar', 'text_domain' ),
                'separate_items_with_commas' => __( 'Separar categorías con comas', 'text_domain' ),
                'add_or_remove_items'        => __( 'Agregar o Remover', 'text_domain' ),
                'choose_from_most_used'      => __( 'Elija entre los más utilizados', 'text_domain' ),
                'popular_items'              => __( 'Más usadas', 'text_domain' ),
                'search_items'               => __( 'Buscar', 'text_domain' ),
                'not_found'                  => __( 'No se encontro', 'text_domain' ),
            );
    $taxs_prensa_args = array(
        'labels'                     => $taxs_prensa_labels,
        'hierarchical'               => true,
        'public'                     => true,
        'show_ui'                    => true,
        'show_admin_column'          => true,
        'show_in_nav_menus'          => true,
        'show_tagcloud'              => true,
        'rewrite'                    => array(
                                              'slug' => 'prensas',
                                              'with_front' => false, 
                                              'hierarchical' => true),
        'query_var'                  => true  );
    register_taxonomy( 'prensas', 'prensa', $taxs_prensa_args );

                $taxs_programas_labels = array(
                'name'                       => _x( 'Categorías de Programa', 'Taxonomy General Name', 'text_domain' ),
                'singular_name'              => _x( 'Categorías de Programa', 'Taxonomy Singular Name', 'text_domain' ),
                'menu_name'                  => __( 'Categorías de Programa', 'text_domain' ),
                'all_items'                  => __( 'Todas las categorías', 'text_domain' ),
                'parent_item'                => __( 'Categoría Superior', 'text_domain' ),
                'parent_item_colon'          => __( 'Categoría Superior:', 'text_domain' ),
                'new_item_name'              => __( 'Nueva Categoría', 'text_domain' ),
                'add_new_item'               => __( 'Añadir Nueva', 'text_domain' ),
                'edit_item'                  => __( 'Editar', 'text_domain' ),
                'update_item'                => __( 'Actualizar', 'text_domain' ),
                'view_item'                  => __( 'Visializar', 'text_domain' ),
                'separate_items_with_commas' => __( 'Separar categorías con comas', 'text_domain' ),
                'add_or_remove_items'        => __( 'Agregar o Remover', 'text_domain' ),
                'choose_from_most_used'      => __( 'Elija entre los más utilizados', 'text_domain' ),
                'popular_items'              => __( 'Más usadas', 'text_domain' ),
                'search_items'               => __( 'Buscar', 'text_domain' ),
                'not_found'                  => __( 'No se encontro', 'text_domain' ),
            );
    $taxs_expositor_args = array(
        'labels'                     => $taxs_programas_labels,
        'hierarchical'               => true,
        'public'                     => true,
        'show_ui'                    => true,
        'show_admin_column'          => true,
        'show_in_nav_menus'          => true,
        'show_tagcloud'              => true,
        'rewrite'                    => array(
                                              'slug' => 'program',
                                              'with_front' => false, 
                                              'hierarchical' => true),
        'query_var'                  => true  );
   register_taxonomy( 'programas', 'programa', $taxs_expositor_args );

      $tags_prensa_labels = array(
        'name' => _x( 'Tags', 'taxonomy general name' ),
        'singular_name' => _x( 'etiquetas', 'taxonomy singular name' ),
        'search_items' =>  __( 'Buscar etiquetas' ),
        'popular_items' => __( 'Popular etiquetas' ),
        'all_items' => __( 'Todas las etiquetas' ),
        'parent_item' => null,
        'parent_item_colon' => null,
        'edit_item' => __( 'Editar etiquetas' ), 
        'update_item' => __( 'Actualizar etiquetas' ),
        'add_new_item' => __( 'Añadir nueva etiqueta' ),
        'new_item_name' => __( 'Nuevo nombre de etiqueta' ),
        'separate_items_with_commas' => __( 'Separa las etiquetas con comas' ),
        'add_or_remove_items' => __( 'Añadir o remover etiquetas' ),
        'choose_from_most_used' => __( 'Elija entre las etiquetas más usadas' ),
        'menu_name' => __( 'Etiquetas' ),
      ); 

        register_taxonomy('tag','prensa',array(
    'hierarchical' => false,
    'labels' => $tags_prensa_labels,
    'show_ui' => true,
    'update_count_callback' => '_update_post_term_count',
    'query_var' => true,
    'rewrite'   => array(
                      'slug' => 'tags',
                      'with_front' => false, 
                      'hierarchical' => false),
  ));

                $taxs_vip_program_labels = array(
                'name'                       => _x( 'Categorías de Vip Program', 'Taxonomy General Name', 'text_domain' ),
                'singular_name'              => _x( 'Categorías de Vip Program', 'Taxonomy Singular Name', 'text_domain' ),
                'menu_name'                  => __( 'Categorías de Vip Program', 'text_domain' ),
                'all_items'                  => __( 'Todas las categorías', 'text_domain' ),
                'parent_item'                => __( 'Categoría Superior', 'text_domain' ),
                'parent_item_colon'          => __( 'Categoría Superior:', 'text_domain' ),
                'new_item_name'              => __( 'Nueva Categoría', 'text_domain' ),
                'add_new_item'               => __( 'Añadir Nueva', 'text_domain' ),
                'edit_item'                  => __( 'Editar', 'text_domain' ),
                'update_item'                => __( 'Actualizar', 'text_domain' ),
                'view_item'                  => __( 'Visializar', 'text_domain' ),
                'separate_items_with_commas' => __( 'Separar categorías con comas', 'text_domain' ),
                'add_or_remove_items'        => __( 'Agregar o Remover', 'text_domain' ),
                'choose_from_most_used'      => __( 'Elija entre los más utilizados', 'text_domain' ),
                'popular_items'              => __( 'Más usadas', 'text_domain' ),
                'search_items'               => __( 'Buscar', 'text_domain' ),
                'not_found'                  => __( 'No se encontro', 'text_domain' ),
            );
    $taxs_vip_program_args = array(
        'labels'                     => $taxs_vip_program_labels,
        'hierarchical'               => true,
        'public'                     => true,
        'show_ui'                    => true,
        'show_admin_column'          => true,
        'show_in_nav_menus'          => true,
        'show_tagcloud'              => true,
        'rewrite'                    => array(
                                              'slug' => 'vip_programs',
                                              'with_front' => false, 
                                              'hierarchical' => true),
        'query_var'                  => true  );
    register_taxonomy( 'vip_programs', 'vip', $taxs_vip_program_args );

                $taxs_expositores_labels = array(
                'name'                       => _x( 'Categorías de Expositores', 'Taxonomy General Name', 'text_domain' ),
                'singular_name'              => _x( 'Categorías de Expositores', 'Taxonomy Singular Name', 'text_domain' ),
                'menu_name'                  => __( 'Categorías de Expositores', 'text_domain' ),
                'all_items'                  => __( 'Todas las categorías', 'text_domain' ),
                'parent_item'                => __( 'Categoría Superior', 'text_domain' ),
                'parent_item_colon'          => __( 'Categoría Superior:', 'text_domain' ),
                'new_item_name'              => __( 'Nueva Categoría', 'text_domain' ),
                'add_new_item'               => __( 'Añadir Nueva', 'text_domain' ),
                'edit_item'                  => __( 'Editar', 'text_domain' ),
                'update_item'                => __( 'Actualizar', 'text_domain' ),
                'view_item'                  => __( 'Visializar', 'text_domain' ),
                'separate_items_with_commas' => __( 'Separar categorías con comas', 'text_domain' ),
                'add_or_remove_items'        => __( 'Agregar o Remover', 'text_domain' ),
                'choose_from_most_used'      => __( 'Elija entre los más utilizados', 'text_domain' ),
                'popular_items'              => __( 'Más usadas', 'text_domain' ),
                'search_items'               => __( 'Buscar', 'text_domain' ),
                'not_found'                  => __( 'No se encontro', 'text_domain' ),
            );
    $taxs_expositores_args = array(
        'labels'                     => $taxs_expositores_labels,
        'hierarchical'               => true,
        'public'                     => true,
        'show_ui'                    => true,
        'show_admin_column'          => true,
        'show_in_nav_menus'          => true,
        'show_tagcloud'              => true,
        'rewrite'                    => array(
                                              'slug' => 'expositores',
                                              'with_front' => false, 
                                              'hierarchical' => true),
        'query_var'                  => true  );
    register_taxonomy( 'expositores', 'expositor', $taxs_expositores_args );

      $tags_expositores_labels = array(
        'name' => _x( 'Tags', 'taxonomy general name' ),
        'singular_name' => _x( 'etiquetas', 'taxonomy singular name' ),
        'search_items' =>  __( 'Buscar etiquetas' ),
        'popular_items' => __( 'Popular etiquetas' ),
        'all_items' => __( 'Todas las etiquetas' ),
        'parent_item' => null,
        'parent_item_colon' => null,
        'edit_item' => __( 'Editar etiquetas' ), 
        'update_item' => __( 'Actualizar etiquetas' ),
        'add_new_item' => __( 'Añadir nueva etiqueta' ),
        'new_item_name' => __( 'Nuevo nombre de etiqueta' ),
        'separate_items_with_commas' => __( 'Separa las etiquetas con comas' ),
        'add_or_remove_items' => __( 'Añadir o remover etiquetas' ),
        'choose_from_most_used' => __( 'Elija entre las etiquetas más usadas' ),
        'menu_name' => __( 'Etiquetas' ),
      ); 

        register_taxonomy('tags_expositores','expositor',array(
    'hierarchical' => false,
    'labels' => $tags_expositores_labels,
    'show_ui' => true,
    'update_count_callback' => '_update_post_term_count',
    'query_var' => true,
    'rewrite'   => array(
                      'slug' => 'tags_expositores',
                      'with_front' => false, 
                      'hierarchical' => false),
  ));

                $taxs_jueces_labels = array(
                'name'                       => _x( 'Categorías de Jueces', 'Taxonomy General Name', 'text_domain' ),
                'singular_name'              => _x( 'Categorías de Jueces', 'Taxonomy Singular Name', 'text_domain' ),
                'menu_name'                  => __( 'Categorías de Jueces', 'text_domain' ),
                'all_items'                  => __( 'Todas las categorías', 'text_domain' ),
                'parent_item'                => __( 'Categoría Superior', 'text_domain' ),
                'parent_item_colon'          => __( 'Categoría Superior:', 'text_domain' ),
                'new_item_name'              => __( 'Nueva Categoría', 'text_domain' ),
                'add_new_item'               => __( 'Añadir Nueva', 'text_domain' ),
                'edit_item'                  => __( 'Editar', 'text_domain' ),
                'update_item'                => __( 'Actualizar', 'text_domain' ),
                'view_item'                  => __( 'Visializar', 'text_domain' ),
                'separate_items_with_commas' => __( 'Separar categorías con comas', 'text_domain' ),
                'add_or_remove_items'        => __( 'Agregar o Remover', 'text_domain' ),
                'choose_from_most_used'      => __( 'Elija entre los más utilizados', 'text_domain' ),
                'popular_items'              => __( 'Más usadas', 'text_domain' ),
                'search_items'               => __( 'Buscar', 'text_domain' ),
                'not_found'                  => __( 'No se encontro', 'text_domain' ),
            );
    $taxs_jueces_args = array(
        'labels'                     => $taxs_jueces_labels,
        'hierarchical'               => true,
        'public'                     => true,
        'show_ui'                    => true,
        'show_admin_column'          => true,
        'show_in_nav_menus'          => true,
        'show_tagcloud'              => true,
        'rewrite'                    => array(
                                              'slug' => 'jueces',
                                              'with_front' => false, 
                                              'hierarchical' => true),
        'query_var'                  => true  );
    register_taxonomy( 'jueces', 'juez', $taxs_jueces_args );

}
add_action( 'init', 'taxs_gral', 0 );

add_action('restrict_manage_posts','listings_prensa_taxs');
function listings_prensa_taxs() {
    global $typenow;
    global $wp_query;
    if ($typenow=='prensa') {
        $taxonomyFil = 'prensas';
        $term = isset($wp_query->query['prensas']) ? $wp_query->query['prensas'] :'';
        wp_dropdown_categories(array(
            'show_option_all' =>  __("Ver todas "),
            'taxonomy'        =>  $taxonomyFil,
            'name'            =>  $taxonomyFil,
            'orderby'         =>  'ID',
            'value_field'      => 'slug',
            'selected'        =>  $term, 
            'hierarchical'    =>  true,
            'depth'           =>  3,
            'show_count'      =>  true, 
            'hide_empty'      =>  false, 
        ));
    }
    if ($typenow=='programa') {
        $taxFil = 'programas';
        $term = isset($wp_query->query['programas']) ? $wp_query->query['programas  '] :'';
        wp_dropdown_categories(array(
            'show_option_all' =>  __("Ver todas "),
            'taxonomy'        =>  $taxFil,
            'name'            =>  $taxFil,
            'orderby'         =>  'ID',
            'value_field'      => 'slug',
            'selected'        =>  $term, 
            'hierarchical'    =>  true,
            'depth'           =>  3,
            'show_count'      =>  true, 
            'hide_empty'      =>  false, 
        ));
    }
    if ($typenow=='vip') {
        $taxFil = 'vip_programs';
        $term = isset($wp_query->query['vip_programs']) ? $wp_query->query['vip_programs  '] :'';
        wp_dropdown_categories(array(
            'show_option_all' =>  __("Ver todas "),
            'taxonomy'        =>  $taxFil,
            'name'            =>  $taxFil,
            'orderby'         =>  'ID',
            'value_field'      => 'slug',
            'selected'        =>  $term, 
            'hierarchical'    =>  true,
            'depth'           =>  3,
            'show_count'      =>  true, 
            'hide_empty'      =>  false, 
        ));
    }
    if ($typenow=='expositor') {
        $taxFil = 'expositores';
        $term = isset($wp_query->query['expositores']) ? $wp_query->query['expositores'] :'';
        wp_dropdown_categories(array(
            'show_option_all' =>  __("Ver todas "),
            'taxonomy'        =>  $taxFil,
            'name'            =>  $taxFil,
            'orderby'         =>  'ID',
            'value_field'      => 'slug',
            'selected'        =>  $term, 
            'hierarchical'    =>  true,
            'depth'           =>  3,
            'show_count'      =>  true, 
            'hide_empty'      =>  false, 
        ));
    }
    if ($typenow=='juez') {
        $taxFil = 'jueces';
        $term = isset($wp_query->query['jueces']) ? $wp_query->query['jueces'] :'';
        wp_dropdown_categories(array(
            'show_option_all' =>  __("Ver todas "),
            'taxonomy'        =>  $taxFil,
            'name'            =>  $taxFil,
            'orderby'         =>  'ID',
            'value_field'      => 'slug',
            'selected'        =>  $term, 
            'hierarchical'    =>  true,
            'depth'           =>  3,
            'show_count'      =>  true, 
            'hide_empty'      =>  false, 
        ));
    }

}
function fixed_cat($args) {
    $args['checked_ontop'] = false;
    $args['order'] = 'ASC';
    return $args;
}

add_filter('wp_terms_checklist_args','fixed_cat');


function get_custom_post_type_template($single_template) {
     global $post;
 
     if ( $post->post_type == ( 'vip_program' )) {
          $single_template = dirname( __FILE__ ) . '/single-vip-program-login.php';
     }
   
     return $single_template;
}
 
 add_filter( "single_template", "get_custom_post_type_template" );

function wpb_cpt_sticky_at_top( $posts ) {

    if ( is_main_query() && is_post_type_archive() ) {
        global $wp_query;

        $sticky_posts = get_option( 'sticky_posts' );
        $num_posts = count( $posts );
        $sticky_offset = 0;

        for ($i = 0; $i < $num_posts; $i++) {

            if ( in_array( $posts[$i]->ID, $sticky_posts ) ) {
                $sticky_post = $posts[$i];

                array_splice( $posts, $i, 1 );

                array_splice( $posts, $sticky_offset, 0, array($sticky_post) );
                $sticky_offset++;

                $offset = array_search($sticky_post->ID, $sticky_posts);
                unset( $sticky_posts[$offset] );
            }
        }

        if ( !empty( $sticky_posts) ) {

            $stickies = get_posts( array(
                'post__in' => $sticky_posts,
                'post_type' =>'prensa',
                'post_status' => 'publish',
                'nopaging' => true
            ) );

            foreach ( $stickies as $sticky_post ) {
                array_splice( $posts, $sticky_offset, 0, array( $sticky_post ) );
                $sticky_offset++;
            }
        }

    }

    return $posts;
}

add_filter( 'the_posts', 'wpb_cpt_sticky_at_top' );

function cpt_sticky_class($classes) {
      if ( is_sticky() ) : 
      $classes[] = 'sticky';
          return $classes;
    endif; 
    return $classes;
        }
add_filter('post_class', 'cpt_sticky_class');

function wpmt_metas_programa() {
    add_meta_box( 'wpmt_meta', __( 'Información adicional', 'wpmt-textdomain' ), 'wpmt_function', 'programa' );
}

function wpmt_metas_programa_add_calendario() {
    add_meta_box( 'wpmt_meta_add_calendario', __( 'Información Calendario', 'wpmt-textdomain' ), 'wpmt_function_programa_add_calendario', 'programa' );
}

function wpmt_metas_prensa() {
    add_meta_box( 'wpmt_meta', __( 'Información adicional', 'wpmt-textdomain' ), 'wpmt_function_prensa', 'prensa' );
}
function wpmt_metas_expositores() {
    add_meta_box( 'wpmt_meta_expositores', __( 'Información adicional', 'wpmt-textdomain' ), 'wpmt_function_expositores', 'expositor' );
}
add_action( 'add_meta_boxes', 'wpmt_metas_programa' );
add_action( 'add_meta_boxes', 'wpmt_metas_programa_add_calendario' );
add_action( 'add_meta_boxes', 'wpmt_metas_prensa' );
add_action( 'add_meta_boxes', 'wpmt_metas_expositores' );
function wpmt_function( $post ) {
    wp_nonce_field( basename( __FILE__ ), 'wpmt_nonce' );
    $wpmt_get_post_meta = get_post_meta( $post->ID );
    ?>
 <table style="width:100%">
    <tr>
                <td style="width: 150px;"><label for="meta-subtitulo" class="wpmt-row-title hook_qtranslatex"><?php _e( 'Subtítulo de la entrada: ', 'wpmt-textdomain' )?></label></td>
               <td > <input type="text" style="width: 250px;"  name="programa-subtitulo" id="programa-subtitulo" class="hook_qtranslatex" value="<?php if ( isset ( $wpmt_get_post_meta['programa-subtitulo'] ) ) echo $wpmt_get_post_meta['programa-subtitulo'][0]; ?>"  placeholder="IMMATERIAL in MATERIALART FAIR"/></td>
    </tr>

    <tr>
        
                <td style="width: 150px;"><label for="meta-hora" class="wpmt-row-title"><?php _e( 'Horario: ', 'wpmt-textdomain' )?></label></td>
                <td ><input type="text" style="width: 250px;" name="programa-hora" id="programa-hora" value="<?php if ( isset ( $wpmt_get_post_meta['programa-hora'] ) ) echo $wpmt_get_post_meta['programa-hora'][0]; ?>" placeholder="12:00 PM – 9:00 PM" /></td>
        
    </tr>
    
    <tr>
        
                <td style="width: 150px;"><label for="meta-ubicacion" class="wpmt-row-title"><?php _e( 'Ubicación: ', 'wpmt-textdomain' )?></label></td>
                <td ><input type="text" style="width: 250px;" name="programa-ubicacion" id="programa-ubicacion" value="<?php if ( isset ( $wpmt_get_post_meta['programa-ubicacion'] ) ) echo $wpmt_get_post_meta['programa-ubicacion'][0]; ?>"  placeholder="Stand PS1, Salón Mercurio"/></td>
        
    </tr>
    
    <tr>
<script type="text/javascript">
jQuery(document).ready(function($){quicktags({id:'programa-link',buttons:"link"});$('#wp-link-submit').click(function(){$('#programa-link').val('');});});
</script>
<style type="text/css">.quicktags-toolbar{background-color: #fff!important;}.imagen_red_social{ display: inline-block; height: 32px; vertical-align: bottom;}input.titulo1{display: inline-block;margin-bottom: 10px;width: 96%;margin: 8px;width: calc(100% - 80px);margin: 0px 0px 0px 10px;}fieldset.form_fechas { width: auto; padding: 0 5px; margin: 0 auto; border: 1px solid #088; padding-bottom: 23px; margin-bottom: 30px;}fieldset.form_fechas{ width: 550px; padding: 0 5px; margin: 0 auto; border: 1px solid #000; padding-bottom: 23px; position: relative; margin-bottom: 20px;}
</style>
                <td style="width: 150px;"><label for="meta-link" class="wpmt-row-title"><?php _e( 'Link: ', 'wpmt-textdomain' )?></label></td>
                <td ><input style="width: 100%;" name="programa-link" id="programa-link" value='<?php if ( isset ( $wpmt_get_post_meta['programa-link'] ) ) echo $wpmt_get_post_meta['programa-link'][0]; ?>' placeholder="http://link.com/artfair" /></td>
        
    </tr>
 </table>
    <?php
}
function wpmt_function_prensa( $post ) {
    wp_nonce_field( basename( __FILE__ ), 'wpmt_nonce' );
    $wpmt_get_post_meta = get_post_meta( $post->ID );
    ?>
 <table style="width:100%">
<!--     <tr>
    
            <td style="width: 150px;"><label for="meta-subtitulo" class="wpmt-row-title "><?php _e( 'Subtítulo de la entrada: ', 'wpmt-textdomain' )?></label></td>
           <td > <input type="text" style="width: 250px;"  name="prensa-subtitulo" id="prensa-subtitulo"  value="<?php if ( isset ( $wpmt_get_post_meta['prensa-subtitulo'] ) ) echo $wpmt_get_post_meta['prensa-subtitulo'][0]; ?>"  placeholder="Art News"/></td>
    
</tr> -->

    <tr>
                <td style="width: 150px;"><label for="meta-autor" class="wpmt-row-title"><?php _e( 'Autor: ', 'wpmt-textdomain' )?></label></td>
                <td ><input type="text" style="width: 250px;" class="hook_qtranslatex" name="prensa-autor" id="prensa-autor" value="<?php if ( isset ( $wpmt_get_post_meta['prensa-autor'] ) ) echo $wpmt_get_post_meta['prensa-autor'][0]; ?>" placeholder="Nombre Autor" /></td>
    </tr>
    
    <tr>
                <td style="width: 150px;"><label for="meta-fecha" class="wpmt-row-title"><?php _e( 'Fecha: ', 'wpmt-textdomain' )?></label></td>
                <td ><input type="text" style="width: 250px;" class="hook_qtranslatex" name="prensa-fecha" id="prensa-fecha" value="<?php if ( isset ( $wpmt_get_post_meta['prensa-fecha'] ) ) echo $wpmt_get_post_meta['prensa-fecha'][0]; ?>"  placeholder="29 Noviembre 2016"/></td>
    </tr>
    
    <tr>
                <td style="width: 150px;"><label for="meta-sticky" class="wpmt-row-title"><?php _e( 'Fijar en Index: ', 'wpmt-textdomain' )?></label></td>
                <td >

                    <input type="checkbox" name="prensa-sticky" id="prensa-sticky" value="yes" <?php if ( isset ( $wpmt_get_post_meta['prensa-sticky'] ) ) checked( $wpmt_get_post_meta['prensa-sticky'][0], 'yes' ); ?> /></td>
    </tr>
    
<!--     
        <tr>
                    <td style="width: 150px;"><label for="meta-sticky" class="wpmt-row-title"><?php _e( 'Fijar en Sección: ', 'wpmt-textdomain' )?></label></td>
                    <td >

                        <input type="checkbox" name="prensa-sticky-seccion" id="prensa-sticky-seccion" value="yes" <?php if ( isset ( $wpmt_get_post_meta['prensa-sticky-seccion'] ) ) checked( $wpmt_get_post_meta['prensa-sticky-seccion'][0], 'yes' ); ?> /></td>
        </tr> 
-->
    
 </table>
    <?php
}
function wpmt_function_expositores( $post ) {
    wp_nonce_field( basename( __FILE__ ), 'wpmt_nonce' );
    $wpmt_get_post_meta = get_post_meta( $post->ID );
    ?>
 <table style="width:100%">

    <tr>
        <td style="width: 150px;"><label for="meta-autor" class="wpmt-row-title"><?php _e( 'Link: ', 'wpmt-textdomain' )?></label></td>
        <td ><input type="text" style="width: 250px;" name="expositores-link" id="expositores-link" value="<?php if ( isset ( $wpmt_get_post_meta['expositores-link'] ) ) echo $wpmt_get_post_meta['expositores-link'][0]; ?>" placeholder="http://WWW.EJEMPLO.COM/" /></td>
    </tr>
    
 </table>
    <?php
}
function wpmt_function_programa_add_calendario( $post ) {
    wp_nonce_field( basename( __FILE__ ), 'wpmt_nonce' );
    $wpmt_get_post_meta = get_post_meta( $post->ID );?>

 <table style="width:100%">
    <tr>
        <td style="width: 150px;">
            <label for="meta-subtitulo" class="wpmt-row-title">
                <?php _e( 'Inicio de evento: ', 'wpmt-textdomain' )?>
                </label>
        </td>
       <td >
            <input 
            type="text" 
            name="calendario-inicio" 
            id="calendario-inicio" 
            style="width: 250px;"
            value="<?php if ( isset ( $wpmt_get_post_meta['calendario-inicio'] ) ) echo $wpmt_get_post_meta['calendario-inicio'][0]; ?>"  placeholder="12/14/2017 08:00 AM - (mm/dd/yy)"/>
        </td>
    </tr>
    <tr>
        <td style="width: 150px;">
            <label for="meta-subtitulo" class="wpmt-row-title">
                <?php _e( 'Termino de evento: ', 'wpmt-textdomain' )?>
                </label>
        </td>
       <td >
            <input 
            type="text" 
            name="calendario-termino" 
            id="calendario-termino" 
            style="width: 250px;"
            value="<?php if ( isset ( $wpmt_get_post_meta['calendario-termino'] ) ) echo $wpmt_get_post_meta['calendario-termino'][0]; ?>"  placeholder="12/14/2017 10:00 AM - (mm/dd/yy)"/>
        </td>
    </tr>
  </table>
<?php }

function wpmt_deed( $post_id ) {
 
    if( isset( $_POST[ 'programa-subtitulo' ] ) ) {
        update_post_meta( $post_id, 'programa-subtitulo', sanitize_text_field( $_POST[ 'programa-subtitulo' ] ) );
    }
    if( isset( $_POST[ 'programa-hora' ] ) ) {
        update_post_meta( $post_id, 'programa-hora', sanitize_text_field( $_POST[ 'programa-hora' ] ) );
    }
    if( isset( $_POST[ 'programa-ubicacion' ] ) ) {
        update_post_meta( $post_id, 'programa-ubicacion', sanitize_text_field( $_POST[ 'programa-ubicacion' ] ) );
    }
    if( isset( $_POST[ 'programa-link' ] ) ) {
        update_post_meta( $post_id, 'programa-link',  $_POST[ 'programa-link' ] );
    }
    if( isset( $_POST[ 'prensa-subtitulo' ] ) ) {
        update_post_meta( $post_id, 'prensa-subtitulo', sanitize_text_field( $_POST[ 'prensa-subtitulo' ] ) );
    }
    if( isset( $_POST[ 'prensa-autor' ] ) ) {
        update_post_meta( $post_id, 'prensa-autor', sanitize_text_field( $_POST[ 'prensa-autor' ] ) );
    }
    if( isset( $_POST[ 'prensa-fecha' ] ) ) {
        update_post_meta( $post_id, 'prensa-fecha',  $_POST[ 'prensa-fecha' ] );
    }
    if( isset( $_POST[ 'prensa-sticky' ] ) ) {
    update_post_meta( $post_id, 'prensa-sticky', 'yes' );
    } else {
        update_post_meta( $post_id, 'prensa-sticky', 'not' );
    }
    if( isset( $_POST[ 'prensa-sticky-seccion' ] ) ) {
    update_post_meta( $post_id, 'prensa-sticky-seccion', 'yes' );
    } else {
        update_post_meta( $post_id, 'prensa-sticky-seccion', 'not' );
    }
    if( isset( $_POST[ 'expositores-link' ] ) ) {
        update_post_meta( $post_id, 'expositores-link',  $_POST[ 'expositores-link' ] );
    }
 
    if( isset( $_POST[ 'calendario-inicio' ] ) ) {
        update_post_meta( $post_id, 'calendario-inicio', sanitize_text_field( $_POST[ 'calendario-inicio' ] ) );
    }
 
    if( isset( $_POST[ 'calendario-termino' ] ) ) {
        update_post_meta( $post_id, 'calendario-termino', sanitize_text_field( $_POST[ 'calendario-termino' ] ) );
    }
}
add_action( 'save_post', 'wpmt_deed' );



add_action( 'admin_menu', 'register_add_admin_menu' );


function register_add_admin_menu(  ) { 

add_menu_page(  'Usuarios VIP', 
                'Usuarios VIP', 
                'manage_options', 
                'usuarios_vip', 
                'register_options_page',
                'dashicons-universal-access-alt' );

add_submenu_page(
                'usuarios_vip', 
                'Editar', 
                'Editar', 
                'manage_options', 
                'usuarios_vip_editar',
                'usuarios_vip_editar_function' );

}

function register_options_page(  ) { 

    ?>


<div class="wrap_usuarios_vip">

<script type="text/javascript">
jQuery(document).ready(function($){
    $('.users_vip_button_del').click(function() {
      $(".users_vip_style_del").hide( "1000" );
    });

        $('.btn_confirma').click(function(){
                        if (confirm("Por favor confirma en \"Aceptar\" para eliminar")) {
            return true;
} else {
    return false;
    
}
        });



});
</script>
        <h2>Usuarios VIP</h2>

<?php
global $wpdb;

//echo "the_post_g\n";
//print_r($_POST);

if ($_POST['users_vip_delete_id']) {

    $users_vip_delete_id = $_POST['users_vip_delete_id'];
    $users_vip_delete_nombre = $_POST['users_vip_delete_nombre'];
    $users_vip_delete_apellido = $_POST['users_vip_delete_apellido'];
    $table = 'wp_users_vip';
    $wpdb->delete($table, array( 'id' => $users_vip_delete_id) );

    $users_vip_style_del='
                            style="
                                width: 100%;
                                height: 50px;
                                background-color: red;
                                font-size: 20px;
                                font-weight: bold;
                                color: white;
                                line-height: 42px;
                            "';

    $users_vip_style_button_del='
                            style="
                                width: 20px;
                                height: 50px;
                                background-color: white;
                                font-size: 20px;
                                font-weight: bold;
                                color: red;
                                line-height: 42px;
                                cursor: pointer;
                                float: left;
                            "';

    echo "\n";
    echo ' <div class="users_vip_style_del"'.$users_vip_style_del.' >';
    echo 'El registro '.$users_vip_delete_id.' - '.$users_vip_delete_nombre.' - '.$users_vip_delete_apellido.' se ha eliminado';
            echo '<div '.$users_vip_style_button_del.' class="users_vip_button_del">';
            echo 'X';
            echo '</div>'; 
    echo '</div>';
    echo "\n";
   // print_r($_GET['users_vip_delete_id']);
}?>
<?php
 if ($_POST['users_vip_btn_descarga']){

add_action('wp_ajax_csv_pull','wpse_ajax_csv_pull');

//    function wpse_ajax_csv_pull() {
  global $wpdb;
  $file = 'email_csv'; // ?? not defined in original code
  $results = $wpdb->get_results("SELECT * FROM wp_users_vip;",ARRAY_A);

  if (empty($results)) {
    return;
  }

  $csv_output = '"'.implode('";"',array_keys($results[0])).'";'."\n";;

  foreach ($results as $row) {
    $csv_output .= '"'.implode('";"',$row).'";'."\n";
  }
  $csv_output .= "\n";

  $filename = $file."_".date("Y-m-d_H-i",time());
  header('Content-Type: text/csv');
  header('Content-Disposition: attachment; filename="' . $filename . '"');
  header('Pragma: no-cache');
  header('Expires: 0');
  print $csv_output;
  exit;
//}
//wpse_ajax_csv_pull();

}



?>
<?php
if ($_POST) {
//echo "si";
echo "\n";
global $wpdb;
$users_vip_nombre=$_POST['users-vip-nombre'];
$users_vip_apellido=$_POST['users-vip-apellido'];
$users_vip_category=$_POST['users-vip-categoria'];
$users_vip_email=$_POST['users-vip-email'];
$users_vip_pass=$_POST['users-vip-pass'];

//$wpdb->query('INSERT INTO wp_users_vip("users_vip_nombre","users_vip_apellido","users_vip_category","users_vip_email","users_vip_pass")VALUES($users_vip_nombre,$users_vip_apellido,$users_vip_category,$users_vip_email,$users_vip_pass)');
//require_once('../../../wp-config.php');

//print_r($wpdb);
$wpdb->insert('wp_users_vip', array(
'users_vip_nombre' => $users_vip_nombre,
'users_vip_apellido' => $users_vip_apellido,
'users_vip_category' => $users_vip_category, 
'users_vip_email' => $users_vip_email, 
'users_vip_pass' => $users_vip_pass
));

}else{
//echo "no";
}
?>
<form 
    
    method="post"
    name="users_vip_form_add"
    action="" 
>

<table style="width:100%">


    <tr>
        <td style="width: 150px;">
            <label for="users-vip-nombre">
                <?php _e( 'Nombre: ', 'uv_userss-vip-textdomain' )?>
            </label>
        </td>
        <td>
            <input
            type="text" 
            name="users-vip-nombre" 
            id="users-vip-nombre" 
            placeholder="Nombre"
            value="<?php //echo $_POST['nombre']; ?>"  
            />
        </td>
    </tr>

    <tr>
        <td style="width: 150px;">
            <label for="users-vip-apellido">
                <?php _e( 'apellido: ', 'uv_users-vip-textdomain' )?>
            </label>
        </td>
        <td>
            <input
            type="text" 
            name="users-vip-apellido" 
            id="users-vip-apellido" 
            placeholder="Apellido"
            value="<?php ?>"  
            />
        </td>
    </tr>

    <tr>
        <td style="width: 150px;">
            <label for="users-vip-categoria">
                <?php _e( 'Categoría: ', 'uv_users-vip-textdomain' )?>
            </label>
        </td>
        <td>
            <select name="users-vip-categoria">
              <option value="collector" selected>Collector</option>
              <option value="Independet art professional">Independet art professional</option>
              <option value="Institutional art professional">Institutional art professional</option>
              <option value="Press">Press</option>
              <option value="Admin">Admin</option>
            </select>
        </td>
    </tr>

    <tr>
        <td style="width: 150px;">
            <label for="users-vip-email">
                <?php _e( 'Email: ', 'uv_users-vip-textdomain' )?>
            </label>
        </td>
        <td>
            <input
            type="text" 
            name="users-vip-email" 
            id="users-vip-email" 
            placeholder="Email"
            value="<?php ?>"  
            />
        </td>
    </tr>

    <tr>
        <td style="width: 150px;">
            <label for="users-vip-pass">
                <?php _e( 'Pass: ', 'uv_users-vip-textdomain' )?>
            </label>
        </td>
        <td>
            <input
            type="text" 
            name="users-vip-pass" 
            id="users-vip-pass" 
            placeholder="Pass"
            value="<?php ?>"  
            />
        </td>
    </tr>

    


    <tr>
        
        <td>
            <input
            type="submit" 
            name="users-vip-submit" 
            id="users-vip-submit" 
            value="<?php echo 'Agregar'; ?>"  
            />
        </td>
    </tr>

 </table>
</form>
<style type="text/css">
    .usuarios_vip_content{}
</style>

<div class="usuarios_vip_content">

    <table class="wp-list-table widefat fixed striped users">
        <tr >
            <td style="text-align: center;">#</td>
            <td style="text-align: center;">Nombre</td>
            <td style="text-align: center;">Apellido</td>
            <td style="text-align: center;">email</td>
            <td style="text-align: center;">Categoría</td>
            <td style="text-align: center;">ID</td>
            <td style="text-align: center;" colspan="2">Modificar</td>
        </tr>
<?php

?>
<?php
//global $wpdb;
//$wp_users_vip = $wpdb->get_results("SELECT * FROM wp_users_vip ORDER BY id DESC LIMIT 0,20");


$registros=20;
$pagina=(!$_GET['num'])?'1':''.$_GET['num'];
if (is_numeric($pagina)) {
    $inicio=(($pagina-1)*$registros);
}else{
    $inicio=0;
}
global $wpdb;
$wp_users_vip = $wpdb->get_results("SELECT * FROM wp_users_vip ORDER BY id DESC LIMIT  $inicio,$registros");
$wpdb_col=$wpdb->get_col( "SELECT * FROM wp_users_vip ");
$wpdb_col_paginacion=$wpdb->get_col( "SELECT * FROM wp_users_vip ORDER BY id DESC LIMIT  $inicio,$registros");
$wp_users_vip_count_row=count($wpdb_col);
$wp_users_vip_count_row_paginacion=count($wpdb_col_paginacion);
$paginas=ceil($wp_users_vip_count_row/$registros);








$k=$wp_users_vip_count_row;
foreach ($wp_users_vip as $key => $value) {$i++;
    //print_r($value);

$k=($wp_users_vip_count_row+1-(($pagina-1)*$registros))-$i;

echo '<tr>';
echo '<td style="text-align: center;" >'.$k.'</td>
      <td style="text-align: center;" >'.$value->users_vip_nombre.'</td>
      <td style="text-align: center;" >'.$value->users_vip_apellido.'</td>
      <td style="text-align: center;" >'.$value->users_vip_email.'</td>
      <td style="text-align: center;" >'.$value->users_vip_category.'</td>
      <td style="text-align: center;" >'.$value->id.'</td>
      <td style="text-align: center;" >

        <form
            action="'.home_url().'/wp-admin/admin.php?page=usuarios_vip_editar"
            method="get">
            <input type="hidden" name="page" value="usuarios_vip_editar">
            <input type="hidden" name="user_vip_id" value="'.$value->id.'"> 
           <input type="submit" value="Editar"> 
        </form>

       </td>
      <td style="text-align: center;" >
            <form
                name="users_vip_form_delete"
                id="users_vip_form_delete"
                method="post"
                action="">
                <input type="hidden" name="page" value="usuarios_vip">
                <input type="hidden" name="users_vip_delete_id" value="'.$value->id.'">
                <input type="hidden" name="users_vip_delete_nombre" value="'.$value->users_vip_nombre.'">
                <input type="hidden" name="users_vip_delete_apellido" value="'.$value->users_vip_apellido.'">
                <input type="submit"  value="X" class="btn_confirma">
            </form>


            
       </td>';
echo '</tr>'.PHP_EOL;
}
/*              <button 
                    type="submit" 
                    form="users_vip_form_delete"
                    data-id="'.$value->id.'"
                    class="btn_confirma"
            >X</button> */
//<input type="submit"  value="X"> 
?>  

       <tr>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td colspan="2" >
  <!--               <form
                    name="users_vip_form_descarga"
                    id="users_vip_form_descarga"
                    method="post" 
                    action=""
                    >
                    <input type="submit" name="users_vip_btn_descarga" value="DESCARGA">
                </form> -->
                
                <!-- <?php //echo admin_url('admin-ajax.php?action=csv_pull', 'https'); ?> -->
                
            </td>
        </tr>     
    </table>
<?php
echo ($pagina>1)?'<a href="https://material-fair.com/wp-admin/admin.php?page=usuarios_vip&num='.($pagina-1).'">Anterior</a>':'';

for ($cont=1; $cont <=$paginas; $cont++) { 


    echo ($cont==$pagina)?''.$cont:'<a href="https://material-fair.com/wp-admin/admin.php?page=usuarios_vip&num='.$cont.'">'.$cont.'</a>';
    echo " ";
}
echo ($pagina<$paginas)?'<a href="https://material-fair.com/wp-admin/admin.php?page=usuarios_vip&num='.($pagina+1).'">Siguiente</a>':'';
?>
<!--     <div class="atras">Atras</div>
    <div class="siguiente">Siguiente</div> -->
</div>

</div>
<?php } // key for function register_options_page(  ) ?>
<?php function usuarios_vip_editar_function(){?>
<?php
global $wpdb;
//print_r($_GET);
$_GET['user_vip_id'];
$user_vip_edit_id= !(isset($_GET['user_vip_id']))?'':''.$_GET['user_vip_id'];
echo "\n\n";
if ($user_vip_edit_id!='') {

$wp_users_vip_edit_query = $wpdb->get_results("SELECT * FROM wp_users_vip WHERE id=".$user_vip_edit_id);
$users_vip_edit_id=$wp_users_vip_edit_query[0]->id;
$users_vip_edit_name=$wp_users_vip_edit_query[0]->users_vip_nombre;
$users_vip_edit_apellido=$wp_users_vip_edit_query[0]->users_vip_apellido;
$users_vip_edit_category=$wp_users_vip_edit_query[0]->users_vip_category;
$users_vip_edit_email=$wp_users_vip_edit_query[0]->users_vip_email;
$users_vip_edit_pass=$wp_users_vip_edit_query[0]->users_vip_pass;
}
//$id = stripslashes_deep($_POST['id']); //added stripslashes_deep which removes WP escaping.
if ($_POST) {
   // print_r($_POST);
    //$user_vip_edit_id=$_POST['users-vip-id'];
    $users_vip_edit_name=stripslashes_deep($_POST['users-vip-nombre']);
    $users_vip_edit_apellido=stripslashes_deep($_POST['users-vip-apellido']);
    $users_vip_edit_category=stripslashes_deep($_POST['users-vip-categoria']);
    $users_vip_edit_email=stripslashes_deep($_POST['users-vip-email']);
    $users_vip_edit_pass=stripslashes_deep($_POST['users-vip-pass']);



   /*( $vip_users_edit_pass=$_POST['[users-vip-pass']=='')?*/
global $wpdb;
$wpdb->update('wp_users_vip', array( 
                                    
                                    'users_vip_nombre'=>$users_vip_edit_name,
                                    'users_vip_apellido'=>$users_vip_edit_apellido, 
                                    'users_vip_category'=>$users_vip_edit_category, 
                                    'users_vip_email'=>$users_vip_edit_email,  
                                    'users_vip_pass'=>$users_vip_edit_pass
                                ), array('id'=>$user_vip_edit_id)
            );
}
?>
<div class="wrap_usuarios_editar">
        <h2>Editar</h2>
        <form name="users_vip_form_edit" action="" method="post">
        <table style="width:100%">
    <tr>
        <td style="width: 150px;">
            <label for="users-vip-id">
                <?php _e( 'ID user: ', 'uv_userss-vip-textdomain' )?>
            </label>
        </td>
        <td>
            <input
            type="text" 
            name="users-vip-id" 
            id="users-vip-id" 
            placeholder="id"
            value=" <?php echo $users_vip_edit_id; ?>"
            disabled/>
        </td>
    </tr>
    <tr>
        <td style="width: 150px;">
            <label for="users-vip-nombre">
                <?php _e( 'Nombre: ', 'uv_userss-vip-textdomain' )?>
            </label>
        </td>
        <td>
            <input
            type="text" 
            name="users-vip-nombre" 
            id="users-vip-nombre" 
            placeholder="Nombre"
            value="<?php echo $users_vip_edit_name; ?>"  
            />
        </td>
    </tr>

    <tr>
        <td style="width: 150px;">
            <label for="users-vip-apellido">
                <?php _e( 'Apellido: ', 'uv_users-vip-textdomain' )?>
            </label>
        </td>
        <td>
            <input
            type="text" 
            name="users-vip-apellido" 
            id="users-vip-apellido" 
            placeholder="Apellido"
            value="<?php echo $users_vip_edit_apellido; ?>"  
            />
        </td>
    </tr>

    <tr>
        <td style="width: 150px;">
            <label for="users-vip-categoria">
                <?php _e( 'Categoría: ', 'uv_users-vip-textdomain' )?>
            </label>
        </td>
        <td>
            <select name="users-vip-categoria">
                <?php
                    $options = array( 'Collector', 
                                      'Independet art professional', 
                                      'Institutional art professional',
                                      'Press', 
                                      'Admin' );
                    $output = '';
                    for( $i=0; $i<count($options); $i++ ) {
                      $output .= '<option ' 
                                 . ( $users_vip_edit_category == $options[$i] ? 'selected="selected"' : '' ) . '>' 
                                 . $options[$i] 
                                 . '</option>';
                    }
                    echo $output;
                ?>
<!--               <option value="collector" selected>Collector</option>
              <option value="Independet art professional">Independet art professional</option>
              <option value="Institutional art professional">Institutional art professional</option>
              <option value="Press">Press</option>
              <option value="Admin">Admin</option> -->
            </select>
        </td>
    </tr>

    <tr>
        <td style="width: 150px;">
            <label for="users-vip-email">
                <?php _e( 'Email: ', 'uv_users-vip-textdomain' )?>
            </label>
        </td>
        <td>
            <input
            type="text" 
            name="users-vip-email" 
            id="users-vip-email" 
            placeholder="email"
            value="<?php echo $users_vip_edit_email; ?>"  
            />
        </td>
    </tr>

    <tr>
        <td style="width: 150px;">
            <label for="users-vip-pass">
                <?php _e( 'Pass: ', 'uv_users-vip-textdomain' )?>
            </label>
        </td>
        <td>
            <input
            type="text" 
            name="users-vip-pass" 
            id="users-vip-pass" 
            placeholder="pass"
            value="<?php echo $users_vip_edit_pass; ?>"  
            />
        </td>
    </tr>

    <tr>
        <td>
           <input 
           type="button" 
           class="button_active" 
           onclick="location.href='https://material-fair.com/wp-admin/admin.php?page=usuarios_vip';"
           value="<?php echo 'REGRESAR'; ?>"  
           /> 
        </td>
        <td>
            <input
            type="submit" 
            name="users-vip-submit" 
            id="users-vip-submit" 
            placeholder="submit"
            value="<?php echo 'GUARDAR'; ?>"  
            />
        </td>
    </tr>

 </table>
 </form>
</div>
<?php } ?>
<?php 
//create db of admin menu page users_vip
global $wpdb;
    $table_users_vip = $wpdb->prefix."users_vip";
    $structure = "CREATE TABLE $table_users_vip (
        id INT(9) NOT NULL AUTO_INCREMENT,
        users_vip_nombre VARCHAR(80) NOT NULL,
        users_vip_apellido VARCHAR(20) NOT NULL,
        users_vip_category VARCHAR(80) NOT NULL,
        users_vip_email VARCHAR(80) NOT NULL,
        users_vip_pass VARCHAR(80) NOT NULL,
        
    UNIQUE KEY id (id)
    );";
    $wpdb->query($structure);

    // $myCustomer = $wpdb->get_row("SELECT * FROM wp_users_vip");
    // //Add column if not present.
    // if(!isset($myCustomer->users_vip_category)){
    //     $wpdb->query("ALTER TABLE wp_users_vip ADD users_vip_category VARCHAR(80) NOT NULL");
    // }
    // ALTER TABLE wp_users_vip ADD users_vip_category VARCHAR(80) NULL AFTER users_vip_apellido;
    // ALTER TABLE `wp_users_vip` CHANGE `users_vip_category` `users_vip_category` VARCHAR(80) CHARACTER SET latin1 COLLATE latin1_swedish_ci NOT NULL;

    //$wpdb->query("INSERT INTO $table(bot_name, bot_mark)
    //    VALUES('Google Bot', 'googlebot')");

//flush_rewrite_rules();
?>
<?php
add_action( 'admin_menu', 'wp_redes_sociales_add_admin_menu' );
add_action( 'admin_init', 'wp_redes_sociales_settings_init' );


function wp_redes_sociales_add_admin_menu(  ) { 

    add_menu_page( 'Redes Sociales', 'Redes Sociales', 'manage_options', 'redes_sociales', 'wp_redes_sociales_options_page','dashicons-share' );
 
}


function wp_redes_sociales_settings_init(  ) { 

    register_setting( 'pluginPage', 'wp_redes_sociales_settings' );

    add_settings_section(
        'wp_redes_sociales_pluginPage_section', 
        __( '', 'wordpress' ), 
        'wp_redes_sociales_settings_section_callback', 
        'pluginPage'
    );

    add_settings_field( 
        'wp_redes_sociales_text_field_0', 
        __( 'Facebook', 'wordpress' ), 
        'wp_redes_sociales_text_field_0_render', 
        'pluginPage', 
        'wp_redes_sociales_pluginPage_section' 
    );

    add_settings_field( 
        'wp_redes_sociales_text_field_1', 
        __( 'Twitter', 'wordpress' ), 
        'wp_redes_sociales_text_field_1_render', 
        'pluginPage', 
        'wp_redes_sociales_pluginPage_section' 
    );

    add_settings_field( 
        'wp_redes_sociales_text_field_2', 
        __( 'Instagram', 'wordpress' ), 
        'wp_redes_sociales_text_field_2_render', 
        'pluginPage', 
        'wp_redes_sociales_pluginPage_section' 
    );

    add_settings_field( 
        'wp_redes_sociales_text_field_3', 
        __( 'Artsy', 'wordpress' ), 
        'wp_redes_sociales_text_field_3_render', 
        'pluginPage', 
        'wp_redes_sociales_pluginPage_section' 
    );


}


function wp_redes_sociales_text_field_0_render(  ) { 

    $options = get_option( 'wp_redes_sociales_settings' );
    ?>
    <input type='text' name='wp_redes_sociales_settings[wp_redes_sociales_text_field_0]' value='<?php echo $options['wp_redes_sociales_text_field_0']; ?>'>
    <?php

}


function wp_redes_sociales_text_field_1_render(  ) { 

    $options = get_option( 'wp_redes_sociales_settings' );
    ?>
    <input type='text' name='wp_redes_sociales_settings[wp_redes_sociales_text_field_1]' value='<?php echo $options['wp_redes_sociales_text_field_1']; ?>'>
    <?php

}


function wp_redes_sociales_text_field_2_render(  ) { 

    $options = get_option( 'wp_redes_sociales_settings' );
    ?>
    <input type='text' name='wp_redes_sociales_settings[wp_redes_sociales_text_field_2]' value='<?php echo $options['wp_redes_sociales_text_field_2']; ?>'>
    <?php

}


function wp_redes_sociales_text_field_3_render(  ) { 

    $options = get_option( 'wp_redes_sociales_settings' );
    ?>
    <input type='text' name='wp_redes_sociales_settings[wp_redes_sociales_text_field_3]' value='<?php echo $options['wp_redes_sociales_text_field_3']; ?>'>
    <?php

}


function wp_redes_sociales_settings_section_callback(  ) { 

    echo __( 'Redes Sociales', 'wordpress' );

}


function wp_redes_sociales_options_page(  ) { 

    ?>
    <form action='options.php' method='post'>

        <h2>Redes Sociales</h2>

        <?php
        settings_fields( 'pluginPage' );
        do_settings_sections( 'pluginPage' );
        submit_button();
        ?>

    </form>
    <?php

}
?>
<?php
/*        header('Content-Type: text/csv');
  header('Content-Disposition: attachment; filename="' . $filename . '"');
  header('Pragma: no-cache');
  header('Expires: 0');
      header("Content-Type: text/csv;charset=utf-8");

  */
class CSVExport {

  /**
   * Constructor
   */
  public function __construct() {
    if (isset($_GET['report'])) {
        date_default_timezone_set('America/Mexico_City');
      $filename = "usuarios_VIP_".date("Y-m-d_H-i",time()).".csv";
       // $filename = "report_";
      $csv = $this->generate_csv();

      header("Pragma: public");
      header("Expires: 0");
      header("Cache-Control: must-revalidate, post-check=0, pre-check=0");
      header("Cache-Control: private", false);
      header('Content-Type: text/html; charset=utf-8');
      header("Content-Disposition: attachment; filename=\"$filename\";");
      header("Content-Transfer-Encoding: binary");

      echo $csv;
      exit;
    }

// Add extra menu items for admins
    add_action('admin_menu', array($this, 'admin_menu'));

// Create end-points
    add_filter('query_vars', array($this, 'query_vars'));
    add_action('parse_request', array($this, 'parse_request'));
  }

  /**
   * Add extra menu items for admins
   */
  public function admin_menu() {
/*                        add_menu_page(
                        'Download Report', 
                        'Download Report', 
                        'manage_options', 
                        'download_report', 
                        array($this, 'download_report')
                        );*/

    add_submenu_page(
                'usuarios_vip', 
                'Descargar Usuarios VIP', 
                'Descargar Usuarios VIP', 
                'manage_options', 
                'download_report',
               array($this, 'download_report')
                );
  }

  /**
   * Allow for custom query variables
   */
  public function query_vars($query_vars) {
    $query_vars[] = 'download_report';
    return $query_vars;
  }

  /**
   * Parse the request
   */
  public function parse_request(&$wp) {
    if (array_key_exists('download_report', $wp->query_vars)) {
      $this->download_report();
      exit;
    }
  }

  /**
   * Download report
   */
  public function download_report() {
    echo '<div class="wrap">';
    echo '<div id="icon-tools" class="icon32">
</div>';
    echo '<h2>Descargar Reporte</h2>';
    echo '<p><a href="?page=download_report&report=users">Exportar los Usuarios VIP</a></p>';
  }

  /**
   * Converting data to CSV
   */
  public function generate_csv() {
    $csv_output = '';
global $wpdb;
  $results = $wpdb->get_results("SELECT * FROM wp_users_vip ORDER BY id DESC LIMIT  0,50",ARRAY_A);
  $users_vip_count=count($results);

  //$csv_output = '"'.implode('","',array_keys($results[0])).'",'."\n";
  $csv_output=utf8_decode(' #, id,"Nombre","Apellido","Categoría","E-mail","Pass"'."\n");

  foreach ($results as $row) {
    $k=$users_vip_count-$i++;
    $csv_output.='"'.$k.'",';
    $csv_output .= '"'.implode('","',$row).'",'."\n";
  }

   $csv_output .= "\n";



    return $csv_output;
  }

}

// Instantiate a singleton of this plugin
$csvExport = new CSVExport();
?>